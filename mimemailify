#!/usr/bin/perl -w
use strict;
use MIME::Entity;
use HTML::Entities;
use Pod::Usage;
use Getopt::Long qw( :config no_ignore_case );


sub printhelp() {
  pod2usage({-verbose => 99
            ,-sections => 'NAME|SYNOPSIS|DESCRIPTION'});
}

=pod

=head1 NAME

mimemailify - Convert plain text into a multipart/alternative message

=head1 SYNOPSIS

mimemailify [arguments] [F<recipient> [F<...>]]

=head1 DESCRIPTION

Takes plain text from stdin and outputs a multipart/alternative MIME message
with text/plain and text/html parts. B<mimemailify> can output to stdout
or directly into your mail system.

=over

=item B<-s> <F<subject>>

Specify a subject

=item B<-m>

Send mail directly, instead of outputting MIME message on stdout. Replaces
piping into B<mail>(1).

=back

=item B<-E>

Don't send messages with an empty body.

=back

=head1 NOTES

This program exists because of Microsoft Outlook behavior documented in MS KB
287816.

=head1 SEE ALSO

B<mail>(1), B<MIME::Tools>(3pm)

=cut

my $subject;
my $send_mail;
my $printhelp;
my $noempty;
GetOptions ('s=s'    => \$subject
           ,'m'      => \$send_mail
           ,'E'      => \$noempty
           ,'help|h' => \$printhelp
) or printhelp();

if ($printhelp) {
  printhelp();
}

my @recipient = join(', ', @ARGV);


my $text = '';
while (my $l = <STDIN>) {
   $text .= $l;
}

if ($noempty && ($text eq '')) {
  exit 0;
}

my $html = '<html><body><pre>' . encode_entities($text) . '</pre></body></html>';
#$html =~ s/$/<br>/gm;


my $msg = MIME::Entity->build(Type       => 'multipart/alternative'
                             ,Subject    => $subject
                             ,To         => \@recipient
                             );

$msg->attach(Type => 'text/plain'
            ,Encoding => 'quoted-printable'
            ,Data => $text);
$msg->attach(Type => 'text/html'
            ,Encoding => 'quoted-printable'
            ,Data => $html);

if ($send_mail) {
  $msg->send();
} else {
  $msg->print();
} 


